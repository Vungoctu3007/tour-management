CREATE TABLE `arrivals` (
  `arrival_id` int(11) NOT NULL,
  `arrival_name` varchar(255) DEFAULT NULL,
  `status_id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;




CREATE TABLE `departures` (
  `departure_id` int(11) NOT NULL,
  `departure_name` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


CREATE TABLE `detailroutes` (
  `detail_route_id` int(11) NOT NULL,
  `route_id` int(11) DEFAULT NULL,
  `price` double DEFAULT NULL,
  `detail_route_name` varchar(255) DEFAULT NULL,
  `description` tinytext DEFAULT NULL,
  `time_to_departure` date DEFAULT NULL,
  `time_to_finish` date DEFAULT NULL,
  `stock` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


CREATE TABLE `images` (
  `image_id` int(11) NOT NULL,
  `text_image` tinytext DEFAULT NULL,
  `detail_route_id` int(11) NOT NULL,
  `is_primary` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


CREATE TABLE `legs` (
  `leg_id` int(11) NOT NULL,
  `detail_route_id` int(11) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `description` tinytext DEFAULT NULL,
  `sequence` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;




CREATE TABLE `roles` (
  `role_id` int(11) NOT NULL,
  `role_name` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;



{
    "detailRouteName": "Tour Việt Nam 5N4Đ: Hà Giang - Đồng Văn - Mèo Vạc",
    "price": 4000000.0,
    "routeId": 4,
    "stock": 15,
    "timeToDeparture": "2025-02-10",
    "timeToFinish": "2025-02-14",
    "description": "- Khám phá cao nguyên đá Đồng Văn.\r\n\r\n- Chiêm ngưỡng cảnh đẹp hùng vĩ của đèo Mã Pí Lèng.\r\n\r\n- Trải nghiệm văn hóa của người dân tộc Mông tại Hà Giang.",
    "images": [
        {
            "textImage": "item_1.jpg"
        },
        {
            "textImage": "item_2.jpg"
        },
        {
            "textImage": "item_3.jpg"
        }
    ],
    "legs": [
        {
            "title": "Đà Nẵng - Hội An (Ăn tối)",
            "description": "Quý khách có mặt tại sân bay Đà Nẵng. Trưởng Đoàn hướng dẫn di chuyển về Hội An, ăn tối và nghỉ ngơi.",
            "sequence": 1
        },
          {
            "title": "Sapa - Hội An (Ăn tối)",
            "description": "Quý khách có mặt tại sân bay Đà Nẵng. Trưởng Đoàn hướng dẫn di chuyển về Hội An, ăn tối và nghỉ ngơi.",
            "sequence": 1
        }

    ]
}





import React, { useState, useEffect, memo } from 'react';

const Leg = memo(({ onLegSelected }) => {
    const [legs, setLegs] = useState([{ title: '', description: '' }]);

    const handleAddLeg = () => setLegs((prev) => [...prev, { title: '', description: '' }]);
    const handleRemoveLeg = (index) => setLegs((prev) => prev.filter((_, i) => i !== index));
    const handleChangeLeg = (index, field, value) => {
        setLegs((prev) =>
            prev.map((leg, i) => (i === index ? { ...leg, [field]: value } : leg))
        );
    };

    useEffect(() => onLegSelected(legs), [legs, onLegSelected]);

    return (
        <div className="mt-2">
            <span className="text-info d-flex fs-5">Thông tin chi tiết lịch trình</span>
            <div className="p-2 border rounded mt-2">
                {legs.map((leg, index) => (
                    <div className="row mb-3" key={index}>
                        <div className="col-5">
                            <label className="form-label">Tên lịch trình:</label>
                            <input
                                value={leg.title}
                                type="text"
                                className="form-control"
                                onChange={(e) => handleChangeLeg(index, 'title', e.target.value)}
                            />
                        </div>
                        <div className="col-5">
                            <label className="form-label">Mô tả:</label>
                            <textarea
                                value={leg.description}
                                className="form-control"
                                onChange={(e) => handleChangeLeg(index, 'description', e.target.value)}
                            ></textarea>
                        </div>
                        <div className="col-2 d-flex align-items-end">
                            {index === legs.length - 1 ? (
                                <button
                                    type="button"
                                    className="btn btn-success"
                                    onClick={handleAddLeg}
                                >
                                    +
                                </button>
                            ) : (
                                <button
                                    type="button"
                                    className="btn btn-danger"
                                    onClick={() => handleRemoveLeg(index)}
                                >
                                    X
                                </button>
                            )}
                        </div>
                    </div>
                ))}
            </div>
        </div>
    );
});

export default Leg;
